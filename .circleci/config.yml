version: 2.1

orbs:
  node: circleci/node@5.2.0
  win: circleci/windows@5.0.0
  macos: circleci/macos@2.4.1

executors:
  # windows: # Docker using the Base Convenience Image
  #   machine:
  #     image: windows-server-2019:current
  linux: 
    machine:
      image: ubuntu-2204:current
  macos: 
    macos:
      xcode: 14.2.0
refs:
  steps:
    - &InstallNode
      node/install:
        node-version: << parameters.node-version >>
    - &InstallDotnetLinux
      steps:
        - run: wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
        - run: sudo dpkg -i packages-microsoft-prod.deb
        - run: sudo apt-get update
        - run: sudo apt-get install -y dotnet-sdk-8.0
    - &InstallDotnetMacos
      run:
        name: Install PNPM
        command: brew install --cask dotnet-sdk
    - &Versions
      run:
        name: Versions
        command: node -v && npm -v && dotnet -version
    - &NpmInstall
      run:
        name: Install Dependencies
        command: npm install
    - &Build
      run:
        name: Build
        command: npx pnpm build
    - &Test
      run:
        name: Test
        command: EDGE_USE_CORECLR=1 npm test
    - &EnsureNode
      run:
        name: EnsureNode
        command: nvm use << parameters.node-version >> ; npm i -g which-

jobs:
  setup:
    parameters:
      os:
        type: executor
      node-version:
        type: string
    executor: linux
    steps:
      - run: wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - run: sudo dpkg -i packages-microsoft-prod.deb
      - run: sudo apt-get update
      - run: sudo apt-get install -y dotnet-sdk-8.0
  test:
    parameters:
      os:
        type: executor
      node-version:
        type: string
    executor: << parameters.os >>
    steps:
      - when:
          condition:
            equal:
              - 'linux'
              - << parameters.os >>
          steps:
            - *InstallDotnetLinux
      - when:
          condition:
            equal:
              - 'macos'
              - << parameters.os >>
          steps:
            - *InstallDotnetMacos
      - *InstallNode  
      - *Versions    
      - checkout
      - *NpmInstall
      - *Test

workflows:
  all-tests:
    jobs:
      - test:
          matrix:
            parameters:
              os: [linux, macos]
              node-version: ["16.20.2", "18.19.1"]
             